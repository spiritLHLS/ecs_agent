name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.21'

    - name: Build
      run: go build -o ecsagent client.go

    - name: Check for existing release
      id: check_release
      run: |
        set -e
        release_url="https://api.github.com/repos/spiritysdx/ecs_agent/releases/tags/ecs_agent"
        response=$(curl -s -o /dev/null -w "%{http_code}" "$release_url")
        if [ "$response" = "200" ]; then
          echo "::set-output name=release_exists::true"
        else
          echo "::set-output name=release_exists::false"
        fi

    - name: Delete existing release
      if: steps.check_release.outputs.release_exists == 'true'
      run: |
        set -e
        release_id=$(curl -s https://api.github.com/repos/spiritysdx/ecs_agent/releases/tags/ecs_agent | jq -r '.id')
        curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/spiritysdx/ecs_agent/releases/$release_id"

    - name: Upload file
      uses: actions/upload-artifact@v2
      with:
        name: ecsagent
        path: ./ecsagent

